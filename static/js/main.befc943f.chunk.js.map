{"version":3,"sources":["components/Input/Input.module.css","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/Input/InputField.js","components/Input/Input.js","components/Filter/Filter.js","utils/localStorage.js","components/App.js","index.js"],"names":["module","exports","Contact","id","name","number","onClick","style","marginBottom","type","ContactList","contacts","handleDelete","length","map","key","InputField","value","onChange","label","htmlFor","Input","state","handleChange","e","setState","target","nameValidation","addedName","findedName","find","alert","onSubmit","preventDefault","props","onClickButton","this","className","css","form","action","Component","Filter","onChangeFilter","allContacts","placeholder","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","stringify","setItem","App","filter","changeFilter","addContact","contactToAdd","shortid","generate","deleteContact","targetId","contactsAfterDel","contactsFromLS","prevProps","prevState","filteredContacts","toLowerCase","includes","filterTasks","paddingLeft","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.befc943f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__3hgnM\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Contact = ({ id, name, number, onClick }) => (\n  <li style={{ marginBottom: \"5px\" }}>\n    <span>\n      {name}: {number}\n    </span>\n    <button type=\"button\" id={id} onClick={onClick}>\n      delete\n    </button>\n  </li>\n);\n\nexport default Contact;\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Contact from \"./Contact\";\n\nconst ContactList = ({ contacts, handleDelete }) =>\n  contacts.length > 0 ? (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <Contact\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onClick={handleDelete}\n        />\n      ))}\n    </ul>\n  ) : (\n    <h3>you don`t have any contacts</h3>\n  );\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputField = ({ type, name, value, onChange, label }) => (\n  <>\n    <label htmlFor={name}>{label}</label>\n    <input\n      id={name}\n      type={type}\n      name={name}\n      value={value}\n      onChange={onChange}\n    ></input>\n  </>\n);\n\nInputField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default InputField;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InputField from \"./InputField\";\nimport css from \"./Input.module.css\";\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onClickButton: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  nameValidation = (addedName, contacts) => {\n    const findedName = contacts.find(({ name }) => name === addedName);\n\n    if (findedName) {\n      alert(`${addedName} is already in contacts.`);\n    }\n\n    return findedName;\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { number, name } = this.state;\n\n    if (this.nameValidation(name, this.props.contacts)) return;\n    this.props.onClickButton(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={css.form} action=\"submit\" onSubmit={this.onSubmit}>\n        <InputField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <InputField\n          label=\"Number\"\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleChange}\n        />\n\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onChangeFilter, contacts, allContacts }) => (\n  <>\n    {contacts.length >= 2 || allContacts.length >= 2 ? (\n      <input\n        type=\"text\"\n        placeholder=\"find by name\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    ) : null}\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onChangeFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","export default {\n  load(key) {\n    try {\n      const serializedState = localStorage.getItem(key);\n\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (err) {\n      console.error(\"Get state error: \", err);\n    }\n  },\n\n  save(key, value) {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (err) {\n      console.error(\"Set state error: \", err);\n    }\n  }\n};\n","import shortid from \"shortid\";\nimport React, { Component } from \"react\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Input from \"./Input/Input\";\nimport Filter from \"./Filter/Filter\";\nimport localStorage from \"../utils/localStorage\";\n\nconst filterTasks = (contacts, filter) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport default class App extends Component {\n  componentDidMount() {\n    const contactsFromLS = localStorage.load(\"contacts\");\n\n    if (contactsFromLS) {\n      this.setState({\n        contacts: contactsFromLS,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.save(\"contacts\", this.state.contacts);\n    }\n  }\n\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  changeFilter = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const contactToAdd = { name, number, id: shortid.generate() };\n\n    this.setState((state) => ({\n      contacts: [...contacts, contactToAdd],\n    }));\n  };\n\n  deleteContact = (e) => {\n    const { contacts } = this.state;\n    const targetId = e.target.id;\n    const contactsAfterDel = contacts.filter(({ id }) => id !== targetId);\n    this.setState({ contacts: contactsAfterDel });\n  };\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterTasks(contacts, filter);\n    return (\n      <div style={{ paddingLeft: \"50px\" }}>\n        <h1>Phonebook</h1>\n        <Input onClickButton={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter\n          value={filter}\n          onChangeFilter={this.changeFilter}\n          allContacts={contacts}\n          contacts={filteredContacts}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          handleDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}